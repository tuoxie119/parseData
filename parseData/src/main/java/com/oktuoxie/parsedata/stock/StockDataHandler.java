package com.oktuoxie.parsedata.stock;

import java.io.ByteArrayOutputStream;
import java.io.InputStream;
import java.net.URL;
import java.util.Date;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.oktuoxie.demo.StartMain;
/**
 * var hq_str_sh601006="大秦铁路, 27.55, 27.25, 26.91, 27.55, 26.20, 26.91, 26.92, 
22114263, 589824680, 4695, 26.91, 57590, 26.90, 14700, 26.89, 14300,
 26.88, 15100, 26.87, 3100, 26.92, 8900, 26.93, 14230, 26.94, 25150, 26.95, 15220, 26.96, 2008-01-11, 15:05:32";
这个字符串由许多数据拼接在一起，不同含义的数据用逗号隔开了，按照程序员的思路，顺序号从0开始。
0：”大秦铁路”，股票名字；
1：”27.55″，今日开盘价；
2：”27.25″，昨日收盘价；
3：”26.91″，当前价格；
4：”27.55″，今日最高价；
5：”26.20″，今日最低价；
6：”26.91″，竞买价，即“买一”报价；
7：”26.92″，竞卖价，即“卖一”报价；
8：”22114263″，成交的股票数，由于股票交易以一百股为基本单位，所以在使用时，通常把该值除以一百；
9：”589824680″，成交金额，单位为“元”，为了一目了然，通常以“万元”为成交金额的单位，所以通常把该值除以一万；
10：”4695″，“买一”申请4695股，即47手；
11：”26.91″，“买一”报价；
12：”57590″，“买二”
13：”26.90″，“买二”
14：”14700″，“买三”
15：”26.89″，“买三”
16：”14300″，“买四”
17：”26.88″，“买四”
18：”15100″，“买五”
19：”26.87″，“买五”
20：”3100″，“卖一”申报3100股，即31手；
21：”26.92″，“卖一”报价
(22, 23), (24, 25), (26,27), (28, 29)分别为“卖二”至“卖四的情况”
30：”2008-01-11″，日期；
31：”15:05:32″，时间；
 * @author liyashuang
 * @time:2014年8月28日 下午9:46:42
 * @email liyashuang@voole.com
 */
public class StockDataHandler implements Runnable{
	Logger logger = LoggerFactory.getLogger(StockDataHandler.class);
	private String url;
	public StockDataHandler(String url){
		this.url=url;
	}
	public void run(){
		 try {  
		      URL u = new URL(url);  
		      byte[] b = new byte[256];  
		      InputStream in = null;  
		      ByteArrayOutputStream bo = new ByteArrayOutputStream();  
//		      while (true) {  
		          try {  
		              in = u.openStream();  
		              int i;  
		              while ((i = in.read(b)) != -1) {  
		                  bo.write(b, 0, i);  
		              }  
		              String result = bo.toString();  
		              String[] stocks = result.split(";"); 
		              for (String stock : stocks) {
						  String regEx = "=\"\""; //表示a或F
						  Pattern pat = Pattern.compile(regEx);
						  Matcher mat = pat.matcher(stock);
			              if(!mat.find()){
//			            	  logger.info(Thread.currentThread().getName()+"==="+new Date().toLocaleString()+stock);
			            	  logger.info(stock.split("=")[1]);
//			            	  logger.info(stock.split("=")[0].replace("var hq_str_", ""));
			              }
		                  String[] datas = stock.split(",");  
		                  //根据对照自己对应数据  
//		                  if(Integer.parseInt(datas[8])>100000){
//		                	  System.out.println(Thread.currentThread().getId()+"name:"+datas[0]+"买一手数："+datas[10]+"时间:"+datas[31]);
//		                  }
		              }  
		              bo.reset();  
		          } catch (Exception e) {  
		        	  logger.error(e.getMessage());
		              System.out.println(e.getMessage());  
		          } finally {  
		              if (in != null) {  
		                  in.close();  
		              }
		          }
//		      }
		  } catch (Exception ex) { 
			  logger.error(ex.getMessage());
		      System.out.println(ex.getMessage());
		  } 
	}
}
